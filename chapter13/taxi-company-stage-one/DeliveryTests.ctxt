#BlueJ class context
comment0.target=class\ DeliveryTests
comment0.text=\nA\ test\ rig\ for\ testing\ the\ pickup\ and\ delivery\ actions\nin\ stage\ one\ of\ the\ development.\n\n@author\ David\ J.\ Barnes\ and\ Michael\ Kolling\n@version\ 2002.07.02\n\n
comment1.params=
comment1.target=int\ testSetup()
comment1.text=\nCreate\ a\ taxi\ company\ and\ taxi\ to\ be\ used\ in\ the\ delivery\ test.\n@return\ The\ number\ of\ steps\ it\ should\ take\ to\ complete\ the\ test.\n\n
comment10.target=company
comment11.target=STEP_LIMIT
comment12.target=taxiLocation
comment13.params=
comment13.target=int\ deliveryTest()
comment13.text=\nA\ pickup\ is\ requested\ for\ the\ passenger.\nThe\ test\ is\ run\ until\ the\ single\ taxi\ becomes\ free\ again,\nor\ the\ step\ limit\ is\ reached.\n@throws\ IllegalStateException\ If\ a\ pickup\ cannot\ be\ found\ for\nthe\ passenger.\n@return\ The\ number\ of\ steps\ taken.\n\n
comment2.params=
comment2.target=void\ setupDefaultLocations()
comment2.text=\nCreate\ a\ default\ set\ of\ locations\ for\ the\ taxi\ and\ passenger.\n\n
comment3.params=
comment3.target=void\ step()
comment3.text=\nRun\ the\ simulation\ for\ one\ step\ by\ requesting\nall\ actors\ to\ act.\n\n
comment4.params=
comment4.target=boolean\ runDeliveryTest()
comment4.text=\nRun\ a\ single\ delivery\ test.\nDifferent\ taxi\ and\ passenger\ locations\ can\ be\ specified\nvia\ setupLocations,\ in\ order\ to\ test\ that\ntaxi\ movement\ in\ different\ directions\ works\ correctly.\n@return\ true\ If\ the\ task\ is\ completed\ in\ the\ expected\ number\nof\ steps,\ false\ otherwise.\n\n
comment5.params=
comment5.target=DeliveryTests()
comment5.text=\nSetup\ to\ run\ tests\ for\ stage\ one\ of\ the\ implementation.\n\n
comment6.target=actors
comment7.target=passenger
comment8.target=taxi
comment9.params=taxiLocation\ pickupLocation\ passengerDestination
comment9.target=void\ setupLocations(Location,Location,Location)
comment9.text=\nReceive\ the\ locations\ to\ be\ used\ in\ the\ test.\nThe\ passenger\ is\ created.\n@param\ taxiLocation\ Where\ the\ taxi\ starts\ from.\n@param\ pickupLocation\ Where\ to\ pickup\ from.\n@param\ passengerDestination\ Where\ the\ passenger\ wishes\ to\ go\ to.\n\n
numComments=14
